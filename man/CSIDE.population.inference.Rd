% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RCTDreplicates.R
\name{CSIDE.population.inference}
\alias{CSIDE.population.inference}
\title{Runs population-level differential expression inference for a \code{\linkS4class{RCTD.replicates}} object}
\usage{
CSIDE.population.inference(
  RCTD.replicates,
  params_to_test = NULL,
  use.groups = FALSE,
  MIN.CONV.REPLICATES = 2,
  MIN.CONV.GROUPS = 2,
  CT.PROP = 0.5,
  q_thresh = 0.01,
  log_fc_thresh = 0.4,
  normalize_expr = F
)
}
\arguments{
\item{RCTD.replicates}{a \code{\linkS4class{RCTD.replicates}} object for which to perform population-level DE inference. Note, at least three
replicates must be provided.}

\item{use.groups}{(default FALSE) if TRUE, treats the replicates as having multiple groups (e.g. samples) according to the \code{group_ids} slot}

\item{MIN.CONV.REPLICATES}{(default 2) the minimum number of replicates (if not use.groups) for which a gene must converge}

\item{MIN.CONV.GROUPS}{(default 2) the minimum number of groups (if use.groups) for which a gene must converge}

\item{CT.PROP}{(default 0.5) minimum ratio of gene expression within cell type compared to other cell types}

\item{q_thresh}{(default 0.01) false discovery rate}

\item{log_fc_thresh}{(default 0.4) minimum natural log estimated DE threshold}

\item{normalize_expr}{(default FALSE) if TRUE, constrains total gene expression to sum to 1 in each condition}

\item{params_to_test:}{(default 2 for test_mode = 'individual', all parameters for test_mode = 'categorical'). An integer vector of parameter
indices to test. Note, for population mode, only the first parameter is tested.}
}
\value{
an \code{\linkS4class{RCTD.replicates}} object containing the results of the CSIDE population-level algorithm. See \code{\linkS4class{RCTD.replicates}}
for documentation on the \code{population_de_results}, \code{population_sig_gene_list}, and \code{population_sig_gene_df} objects.
}
\description{
First, CSIDE must have been run on all replicates using e.g. the \code{\link{run.CSIDE.replicates}} function.
}
