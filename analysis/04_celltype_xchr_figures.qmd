---
title: "Cell type and X-chromosome figures"
format: 
  gfm:
    toc: true
editor: source
execute:
  cache: true
---

```{r}
library(dplyr)
library(Matrix)
library(data.table)
library(rtracklayer)
library(tibble)
library(ggplot2)
library(ggthemes)
```


# Load in data

## Hippocampus - Mouse 3

```{r}
PATH <- '../inst/extdata/slideseq/hippo3'

positions1 <- fread(file.path(PATH, 'Puck_221014_21_barcode_matching.txt.gz'), header=F, col.names = c('bead','idk1','x','y')) |>
  distinct(bead, .keep_all=T) |>
  mutate(bead = paste0(bead, '_1'))
counts1 <- fread(file.path(PATH, '2022-12-11_Puck_221014_21_combined_atropos_polyAGtrim_nm3.csv')) |>
  mutate(bead = paste0(substr(bead, 1, 14), '_1')) |>
  filter(bead %in% positions1$bead)
positions2 <- fread(file.path(PATH, 'Puck_221014_22_barcode_matching.txt.gz'), header=F, col.names = c('bead','idk1','x','y')) |>
  distinct(bead, .keep_all=T) |>
  mutate(bead = paste0(bead, '_2'))
counts2 <- fread(file.path(PATH, '2022-12-11_Puck_221014_22_combined_atropos_polyAGtrim_nm3.csv')) |>
  mutate(bead = paste0(substr(bead, 1, 14), '_2')) |>
  filter(bead %in% positions2$bead)


# MANUAL ALIGNING THE PUCKS
# flip puck2 coordinates over x=2500
vline <- 2500
positions2 <- positions2 |> mutate(x = -(x-vline)+vline)
# shrink x coordinates
positions2 <- positions2 |> mutate(x = x/1.1)
# rotation
xcenter <- (max(positions2$x)+min(positions2$x))/2
ycenter <- (max(positions2$y)+min(positions2$y))/2
xshift <- 552
yshift <- 278
angle <- 47

x <- positions2$x
y <- positions2$y
xnew <- (x-xcenter)*cos(angle*pi/180) - (y-ycenter)*sin(angle*pi/180)+xcenter + xshift
ynew <- (x-xcenter)*sin(angle*pi/180) + (y-ycenter)*cos(angle*pi/180)+ycenter + yshift

positions2$x <- xnew
positions2$y <- ynew

maternal_counts<- counts1 |>
  bind_rows(counts2) |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
maternal_counts_matrix_hippo <- sparseMatrix(i=maternal_counts$gene, j=maternal_counts$bead, x=maternal_counts$CAST)
rownames(maternal_counts_matrix_hippo) <- levels(maternal_counts$gene)
colnames(maternal_counts_matrix_hippo) <- levels(maternal_counts$bead)

paternal_counts <- counts1 |>
  bind_rows(counts2) |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
paternal_counts_matrix_hippo <- sparseMatrix(i=paternal_counts$gene, j=paternal_counts$bead, x=paternal_counts$`129`)
rownames(paternal_counts_matrix_hippo) <- levels(paternal_counts$gene)
colnames(paternal_counts_matrix_hippo) <- levels(paternal_counts$bead)


positions <- positions1 |> bind_rows(positions2) |>
  select(bead,x,y)

coords_hippo <- positions |> select(bead, x, y)
```

## Cerebellum - Mouse 3

```{r}
PATH <- '../inst/extdata/slideseq/cere3'

positions1 <- fread(file.path(PATH, 'Puck_221014_23_barcode_matching.txt.gz'), header=F, col.names = c('bead','idk1','x','y')) |>
  distinct(bead, .keep_all=T) |>
  mutate(bead = paste0(bead, '_1'))
counts1 <- fread(file.path(PATH, '2022-12-11_Puck_221014_23_combined_atropos_polyAGtrim_nm3.csv')) |>
  mutate(bead = paste0(substr(bead, 1, 14), '_1')) |>
  filter(bead %in% positions1$bead)
positions2 <- fread(file.path(PATH, 'Puck_221014_24_barcode_matching.txt.gz'), header=F, col.names = c('bead','idk1','x','y')) |>
  distinct(bead, .keep_all=T) |>
  mutate(bead = paste0(bead, '_2'))
counts2 <- fread(file.path(PATH, '2022-12-11_Puck_221014_24_combined_atropos_polyAGtrim_nm3.csv')) |>
  mutate(bead = paste0(substr(bead, 1, 14), '_2')) |>
  filter(bead %in% positions2$bead)


# MANUAL ALIGNING THE PUCKS
# rotation
xcenter <- (max(positions2$x)+min(positions2$x))/2
ycenter <- (max(positions2$y)+min(positions2$y))/2
xshift <- 748
yshift <- -241
angle <- 86

x <- positions2$x
y <- positions2$y
xnew <- (x-xcenter)*cos(angle*pi/180) - (y-ycenter)*sin(angle*pi/180)+xcenter + xshift
ynew <- (x-xcenter)*sin(angle*pi/180) + (y-ycenter)*cos(angle*pi/180)+ycenter + yshift

positions2$x <- xnew
positions2$y <- ynew

positions2$x <- xnew
positions2$y <- ynew

maternal_counts<- counts1 |>
  bind_rows(counts2) |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
maternal_counts_matrix_cere <- sparseMatrix(i=maternal_counts$gene, j=maternal_counts$bead, x=maternal_counts$CAST)
rownames(maternal_counts_matrix_cere) <- levels(maternal_counts$gene)
colnames(maternal_counts_matrix_cere) <- levels(maternal_counts$bead)

paternal_counts <- counts1 |>
  bind_rows(counts2) |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
paternal_counts_matrix_cere <- sparseMatrix(i=paternal_counts$gene, j=paternal_counts$bead, x=paternal_counts$`129`)
rownames(paternal_counts_matrix_cere) <- levels(paternal_counts$gene)
colnames(paternal_counts_matrix_cere) <- levels(paternal_counts$bead)


positions <- positions1 |> bind_rows(positions2) |>
  select(bead,x,y)

coords_cere <- positions |> select(bead, x, y)
```


# Cell type

## Cell type map - hippo

```{r}
rctd_hippo <- readRDS('rctd_combined_hippo_3_nm3.rds')
```

```{r}
hippo_ct <- left_join(rctd_hippo@originalSpatialRNA@coords |> rownames_to_column(), rctd_hippo@results$results_df |> rownames_to_column()) |> filter(!is.na(first_type)) |> mutate(first_type = as.character(first_type))
hippo_ct$first_type[grepl('Endothelial', hippo_ct$first_type)] <- 'Endothelial'
```

```{r}
hippo_ct |> 
  filter(spot_class %in% c('singlet')) |>
  filter(first_type %in% c('Astrocyte', 'CA1', 'CA3', 'Dentate', 'Interneuron', 'Oligodendrocyte', 'Choroid', 'Entorihinal', 'Endothelial')) |>
  filter(!rowname %in% c('ATACCTATCTCGTA_2', 'CTACGCAAAGCTTG_1', 'GCGGTGGCGCTATC_1')) |> # remove stragglers
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = first_type), size=0.1) +
  scale_color_tableau() +
  theme_void() +
  theme(legend.position = 'none')
ggsave('figures/04_hippo_3_celltype_map.pdf', height=3, width=3)

hippo_ct |> 
  filter(spot_class == 'singlet') |>
  filter(first_type %in% c('Astrocyte', 'CA1', 'CA3', 'Dentate', 'Interneuron', 'Oligodendrocyte', 'Choroid', 'Entorihinal', 'Endothelial')) |>
  mutate(first_type = ifelse(first_type == 'Entorihinal', 'Entorhinal', first_type)) |>
  filter(!rowname %in% c('ATACCTATCTCGTA_2', 'CTACGCAAAGCTTG_1', 'GCGGTGGCGCTATC_1')) |>
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = first_type), size=1) +
  scale_color_tableau(name='') +
  theme_void() 
ggsave('figures/04_hippo_3_celltype_map_legend.pdf', height=3, width=3)
```

## Cell type map - cere

```{r}
rctd_cere <- readRDS('rctd_combined_cere_4_nm3.rds')
cere_ct <- left_join(rctd_cere@originalSpatialRNA@coords |> rownames_to_column(), rctd_cere@results$results_df |> rownames_to_column()) |> filter(!is.na(first_type)) |> mutate(first_type = as.character(first_type))
```

```{r}
cere_ct |> 
  filter(spot_class %in% c('singlet')) |>
  filter(first_type %in% c('Astrocytes', 'Fibroblast', 'Granule', 'MLI1', 'MLI2', 'Purkinje', 'Bergmann', 'Oligodendrocytes', 'Endothelial')) |>
  filter(y > 1000, x > 1000) |>
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = first_type), size=0.1) +
  scale_color_tableau() +
  theme_void() +
  theme(legend.position = 'none')
ggsave('figures/04_cere_3_celltype_map.pdf', height=3, width=3)

cere_ct |> 
  filter(spot_class %in% c('singlet')) |>
  filter(first_type %in% c('Astrocytes', 'Fibroblast', 'Granule', 'MLI1', 'MLI2', 'Purkinje', 'Bergmann', 'Oligodendrocytes', 'Endothelial')) |>
  filter(y > 1000, x > 1000) |>
  ggplot(aes(x = x, y = y)) +
  geom_point(aes(color = first_type), size=1) +
  scale_color_tableau() +
  theme_void() 
ggsave('figures/04_cere_3_celltype_map_legend.pdf', height=3, width=3)
```



```{r}
myfit_hippo <- spase(maternal_counts_matrix_hippo, paternal_counts_matrix_hippo, coords_hippo,cores=1,verbose=T, df=15, genes=c('Nrip3', 'Ptgds', 'Sst'))
```

## Ptgds

```{r}
plotSpase(
  matrix1 = maternal_counts_matrix_hippo, 
  matrix2 = paternal_counts_matrix_hippo, 
  covariates = coords_hippo, 
  spasefit = myfit_hippo, 
  coords = coords_hippo |> select(x,y) |> sample_n(10000), 
  genes = c('Ptgds'),
  crosshairs = F,
  crosshairs_diag = T,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_Crosshairs'
)
```



## Sst

```{r}
plotSpase(
  matrix1 = maternal_counts_matrix_hippo, 
  matrix2 = paternal_counts_matrix_hippo, 
  covariates = coords_hippo, 
  spasefit = myfit_hippo, 
  coords = coords_hippo |>  select(x,y) |> sample_n(10000), 
  genes = c('Sst'),
  crosshairs = T,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_Crosshairs'
)
```

## Bex2, Uba1, Tspan7

```{r}
myfit_cere <- spase(maternal_counts_matrix_cere, paternal_counts_matrix_cere, coords_cere,cores=1,verbose=T, df=15, genes=c('Uba1', 'Bex2', 'Tspan7'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_matrix_cere, 
  matrix2 = paternal_counts_matrix_cere, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = coords_cere |>  select(x,y) |> sample_n(10000), 
  genes = c('Uba1'),
  crosshairs = T,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04'
)
```

```{r}
plotSpase(
  matrix1 = maternal_counts_matrix_cere, 
  matrix2 = paternal_counts_matrix_cere, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = cere_ct |> 
  filter(spot_class %in% c('singlet')) |>
  filter(first_type %in% c('Granule')) |> select(x,y) |> filter(x>1000, y>1000), 
  genes = c('Uba1'),
  crosshairs = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_granule'
)
```
```{r}
plotSpase(
  matrix1 = maternal_counts_matrix_cere, 
  matrix2 = paternal_counts_matrix_cere, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = cere_ct |> 
  filter(spot_class %in% c('singlet')) |>
  filter(first_type %in% c('Granule')) |> select(x,y) |> filter(x > 1000, y > 1000), 
  genes = c('Tspan7'),
  crosshairs = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_granule'
)
```


# X-chromosome

```{r}
# Read in gencode to grab xchr genes
gencode <- import('/rafalab/lzou/resources/gencode.vM10.annotation.gff3.gz')
xchr_genes <- unique(gencode$gene_name[which(seqnames(gencode)=='chrX')])
xchr_genes <- c(xchr_genes, 'Bex3')

```

## Hippo 1

```{r}
hippo1 <- readRDS('rctd_combined_hippo_1.rds')
maternal_counts_matrix_hippo <- hippo1@originalSpatialRNA@maternalCounts
paternal_counts_matrix_hippo <- hippo1@originalSpatialRNA@paternalCounts
coords_hippo <- hippo1@originalSpatialRNA@coords |> rownames_to_column()
```

### Merge 

Merge all X-chromosome genes except Xist

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_hippo['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_hippo['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit_hippo <- spase(maternal_counts_x, paternal_counts_x, coords_hippo,cores=1,verbose=T, df=15, genes = c('X', 'Xist'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_hippo, 
  spasefit = myfit_hippo, 
  coords = coords_hippo |> select(x,y) |> sample_n(10000), 
  genes = c('X', 'Xist'),
  crosshairs = T,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_hippo1'
)
```


## Hippo 2

```{r}
hippo2 <- readRDS('hippo_slideseq_mouse_2.rds')
maternal_counts_matrix_hippo <- hippo2@originalSpatialRNA@maternalCounts
paternal_counts_matrix_hippo <- hippo2@originalSpatialRNA@paternalCounts
coords_hippo <- hippo2@originalSpatialRNA@coords |> rownames_to_column()
```

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X')
myfit_hippo <- spase(maternal_counts_x, paternal_counts_x, coords_hippo,cores=1,verbose=T, df=15, genes = c('X'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_hippo, 
  spasefit = myfit_hippo, 
  coords = coords_hippo |> select(x,y) |> sample_n(10000), 
  genes = c('X'),
  crosshairs = F,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_hippo2'
)
```

## Cere 3

```{r}
cere3 <- readRDS('rctd_combined_cere_4.rds')
maternal_counts_matrix_cere <- cere3@originalSpatialRNA@maternalCounts
paternal_counts_matrix_cere <- cere3@originalSpatialRNA@paternalCounts
coords_cere <- cere3@originalSpatialRNA@coords |> rownames_to_column()
```

### Merge 

Merge all X-chromosome genes except Xist

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_cere) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_cere[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_cere[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_cere['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_cere['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X', 'Xist')
myfit_cere <- spase(maternal_counts_x, paternal_counts_x, coords_cere,cores=1,verbose=T, df=15, genes = c('X', 'Xist'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = coords_cere |> select(x,y) |> sample_n(10000), 
  genes = c('X', 'Xist'),
  crosshairs = T,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_cere3'
)
```



## Hippo 3

### Merge 

Merge all X-chromosome genes except Xist

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_hippo['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_hippo['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit_hippo <- spase(maternal_counts_x, paternal_counts_x, coords_hippo,cores=1,verbose=T, df=15, genes = c('X', 'Xist'))
```



```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_hippo, 
  spasefit = myfit_hippo, 
  coords = coords_hippo |> select(x,y) |> sample_n(10000), 
  genes = c('X', 'Xist'),
  crosshairs = F,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_hippo3'
)
```


## Cere 4

```{r}
cere4 <- readRDS('rctd_cere_3.rds')
maternal_counts_matrix_cere <- cere4@originalSpatialRNA@maternalCounts
paternal_counts_matrix_cere <- cere4@originalSpatialRNA@paternalCounts
coords_cere <- cere4@originalSpatialRNA@coords |> rownames_to_column()
```

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_cere) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_cere[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_cere[xchr_idx,])))
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X')
myfit_cere <- spase(maternal_counts_x, paternal_counts_x, coords_cere,cores=1,verbose=T, df=15, genes = c('X'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = coords_cere |> select(x,y), 
  genes = c('X'),
  crosshairs = F,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_cere4'
)
```


```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = coords_cere, 
  spasefit = myfit_cere, 
  coords = coords_cere |> select(x,y), 
  genes = c('X'),
  crosshairs = F,
  crosshairs_diag = T,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_cere4_cross'
)
```

## Mix 5



```{r}
PATH <- '../inst/extdata/visium/mixture'
counts <- fread(file.path(PATH, 'mixture.csv'))
positions <- fread(file.path(PATH, 'tissue_positions.csv'))
counts <- counts |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
maternal_counts_matrix <- sparseMatrix(i=counts$gene, j=counts$bead, x=counts$CAST)
paternal_counts_matrix <- sparseMatrix(i=counts$gene, j=counts$bead, x=counts$`129`)
rownames(maternal_counts_matrix) <- rownames(paternal_counts_matrix) <- levels(counts$gene)
colnames(maternal_counts_matrix) <- colnames(paternal_counts_matrix) <- levels(counts$bead)
positions <- positions |>
  select(barcode, starts_with('pxl')) |>
  dplyr::rename(x = pxl_row_in_fullres, y = pxl_col_in_fullres)
```

```{r}
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix[xchr_idx,])))
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X')
myfit <- spase(maternal_counts_x, paternal_counts_x, positions,cores=1,verbose=T, df=15, genes = c('X'))
```

```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = positions, 
  spasefit = myfit, 
  coords = positions |> select(x,y), 
  genes = c('X'),
  crosshairs = F,
  crosshairs_diag = F,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_mix5'
)
```


```{r}
plotSpase(
  matrix1 = maternal_counts_x, 
  matrix2 = paternal_counts_x, 
  covariates = positions, 
  spasefit = myfit, 
  coords = positions |> select(x,y), 
  genes = c('X'),
  crosshairs = F,
  crosshairs_diag = T,
  point.size = 0.75,
  size.scale = F,
  theme = 'void',
  void = T,
  save = 'figures/04_mergedX_mix5_cross'
)
```

# X-chromosome counts vs. Xist counts

Is having more Xist counts relative to X-chromosome counts associated
with greater variance in maternal proportion

```{r}
xx <- data.frame(samples = c('Mouse 1 Hippo', 'Mouse 2 Hippo', 'Mouse 3 Hippo', 'Mouse 3 Cere', 'Mouse 4 Cere', 'Mouse 5 Mix'), X=numeric(6), Xist=numeric(6), phi=numeric(6))
```


```{r}
hippo1 <- readRDS('rctd_combined_hippo_1.rds')
maternal_counts_matrix_hippo <- hippo1@originalSpatialRNA@maternalCounts
paternal_counts_matrix_hippo <- hippo1@originalSpatialRNA@paternalCounts
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_hippo['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_hippo['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X')
xx[1,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)

hippo2 <- readRDS('hippo_slideseq_mouse_2.rds')
maternal_counts_matrix_hippo <- hippo2@originalSpatialRNA@maternalCounts
paternal_counts_matrix_hippo <- hippo2@originalSpatialRNA@paternalCounts
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_hippo['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_hippo['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X')
xx[2,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)

hippo3 <- readRDS('rctd_combined_hippo_3_nm3.rds')
maternal_counts_matrix_hippo <- hippo3@originalSpatialRNA@maternalCounts
paternal_counts_matrix_hippo <- hippo3@originalSpatialRNA@paternalCounts
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_hippo) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_hippo[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_hippo[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_hippo['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_hippo['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X', min.cells=5)
xx[3,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)

cere3 <- readRDS('rctd_combined_cere_4_nm3.rds')
maternal_counts_matrix_cere <- cere3@originalSpatialRNA@maternalCounts
paternal_counts_matrix_cere <- cere3@originalSpatialRNA@paternalCounts
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_cere) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_cere[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_cere[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_cere['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_cere['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X', min.cells=5)
xx[4,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)

cere4 <- readRDS('rctd_cere_3.rds')
maternal_counts_matrix_cere <- cere4@originalSpatialRNA@maternalCounts
paternal_counts_matrix_cere <- cere4@originalSpatialRNA@paternalCounts
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix_cere) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix_cere[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix_cere[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_cere['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_cere['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X', min.cells=5)
xx[5,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)

PATH <- '../inst/extdata/visium/mixture'
counts <- fread(file.path(PATH, 'mixture.csv'))
positions <- fread(file.path(PATH, 'tissue_positions.csv'))
counts <- counts |>
  arrange(bead, gene) |>
  mutate(bead = as.factor(bead), gene = as.factor(gene))
maternal_counts_matrix <- sparseMatrix(i=counts$gene, j=counts$bead, x=counts$CAST)
paternal_counts_matrix <- sparseMatrix(i=counts$gene, j=counts$bead, x=counts$`129`)
rownames(maternal_counts_matrix) <- rownames(paternal_counts_matrix) <- levels(counts$gene)
colnames(maternal_counts_matrix) <- colnames(paternal_counts_matrix) <- levels(counts$bead)
positions <- positions |>
  select(barcode, starts_with('pxl')) |>
  dplyr::rename(x = pxl_row_in_fullres, y = pxl_col_in_fullres)
x_inactive <- xchr_genes[-which(xchr_genes == 'Xist')]
xchr_idx <- rownames(maternal_counts_matrix) %in% x_inactive
maternal_counts_x <- t(as.matrix(colSums(maternal_counts_matrix[xchr_idx,])))
paternal_counts_x <- t(as.matrix(colSums(paternal_counts_matrix[xchr_idx,])))
maternal_counts_x <- rbind(maternal_counts_x, maternal_counts_matrix_cere['Xist',])
paternal_counts_x <- rbind(paternal_counts_x, paternal_counts_matrix_cere['Xist',])
rownames(maternal_counts_x) <- rownames(paternal_counts_x) <- c('X','Xist')
myfit <- scase(maternal_counts_x, paternal_counts_x, cores=1, verbose=T, genes = 'X', min.cells=5)
xx[6,2:4] <- c(as.numeric(rowSums(maternal_counts_x + paternal_counts_x)), myfit$phi)
```

```{r}
xx |>
  ggplot(aes(x = Xist/X, y = phi)) +
  geom_point(aes(color = samples)) +
  scale_color_tableau(name = 'Sample') +
  theme_classic() +
  xlab('Normalized Xist expression') +
  ylab('X-chromosome overdispersion')
ggsave(filename = 'figures/04_xchr_overdispersion_scatter_samples.pdf', height=3, width=5)
```



