---
title: "Visium and Slide-seq cerebellum, mixtures"
format: html
editor: source
---

```{r}
library(tibble)
library(latex2exp)
```

```{r}
# for removing x chromosome genes
gencode <- import('/rafalab/lzou/resources/gencode.vM10.annotation.gff3.gz')
xchr_genes <- unique(gencode$gene_name[which(seqnames(gencode)=='chrX')])
xchr_genes <- c(xchr_genes, 'Bex3')
```



# Characterizing mixtures - histograms

```{r}
ss <- readRDS('rctd_combined_cere_4.rds')
viz <- readRDS('cside_spase_cere_3.rds')
```

## Slide-seq

```{r}
rctd_res <- ss@results$results_df |> rownames_to_column(var = 'bead')
coords <- ss@spatialRNA@coords |> rownames_to_column(var = 'bead')
coords <- coords |> left_join(rctd_res |> select(bead, spot_class, first_type, second_type))
doublets <- coords |> filter(grepl('doublet', spot_class)) |> pull(bead)
singlets <- coords |> filter(spot_class == 'singlet') |> pull(bead)
```

### Doublets

```{r}
genes <- rownames(ss@spatialRNA@maternalCounts)
genes <- genes[-which(genes %in% xchr_genes)]
mat <- ss@spatialRNA@maternalCounts[genes,doublets]
pat <- ss@spatialRNA@paternalCounts[genes,doublets]
tot <- mat+pat
doub <- NULL
for (i in c(2:10)) {
  idx <- which(tot == i)
  y <- mat[idx]
  dd <- data.frame(
    mat = y,
    pat = i-y,
    class = 'doublets',
    tot = i
  )
  if (is.null(doub)) {
    doub <- dd
  } else {
    doub <- bind_rows(dd, doub)
  }
}
```

### Singlets

```{r}
mat <- ss@spatialRNA@maternalCounts[genes,singlets]
pat <- ss@spatialRNA@paternalCounts[genes,singlets]
tot <- mat+pat
sing <- NULL
for (i in 2:10) {
  idx <- which(tot == i)
  y <- mat[idx]
  dd <- data.frame(
    mat = y,
    pat = i-y,
    class = 'singlets',
    tot = i
  )
  if (is.null(sing)) {
    sing <- dd
  } else {
    sing <- bind_rows(dd, sing)
  }
}
```

## Visium

```{r}
coords_viz <- viz@spatialRNA@coords |> rownames_to_column(var = 'bead')
genes <- rownames(viz@spatialRNA@maternalCounts)
genes <- genes[-which(genes %in% xchr_genes)]
genes <- genes[-which(grepl('mt-', genes))]
mat <- viz@spatialRNA@maternalCounts[genes,coords_viz$bead]
pat <- viz@spatialRNA@paternalCounts[genes,coords_viz$bead]
tot <- mat+pat
viz <- NULL
for (i in 2:10) {
  idx <- which(tot == i)
  y <- mat[idx]
  dd <- data.frame(
    mat = y,
    pat = i-y,
    class = 'visium',
    tot = i
  )
  if (is.null(viz)) {
    viz <- dd
  } else {
    viz <- bind_rows(dd, viz)
  }
}
```

## Binomial sampling

```{r}
# perfect p=0.5 binomial sampling
binsamp <- NULL
for (i in 2:10) {
  y <- rbinom(10000, i, 0.5)
  dd <- data.frame(mat = y,
                   pat = i-y,
                   class = 'binomial',
                   tot = i)
  if (is.null(binsamp)) {
    binsamp <- dd
  } else {
    binsamp <- bind_rows(binsamp, dd)
  }
}

```


## Smart-seq3

```{r}
c57 <- data.frame(fread('smartseq3/SS3_c57_UMIs_concat.csv'))
rownames(c57) <- c57$V1
c57$V1 <- NULL
cast <- data.frame(fread('smartseq3/SS3_cast_UMIs_concat.csv'))
rownames(cast) <- cast$V1
cast$V1 <- NULL

genes <- rownames(cast)
genes <- genes[-which(genes %in% xchr_genes)]

c57 <- Matrix(as.matrix(c57))[genes,]
cast <- Matrix(as.matrix(cast))[genes,]
tot <- c57+cast
```

```{r}
ss3 <- NULL
for (i in 2:100) {
  idx <- which(tot == i)
  y <- c57[idx]
  dd <- data.frame(
    mat = y,
    pat = i-y,
    class = 'smart-seq3',
    tot = i
  )
  if (is.null(ss3)) {
    ss3 <- dd
  } else {
    ss3 <- bind_rows(dd, ss3)
  }
}
```


```{r}
bind_rows(doub, sing, viz, binsamp, ss3) |>
  filter(tot < 7) |>
  mutate(tot_bin = cut(tot, breaks = c(0,1,2,3,4,5,6), include.lowest=F)) |>
  mutate(class = factor(class, levels = c('binomial', 'visium', 'doublets', 'singlets', 'smart-seq3'))) |>
  ggplot(aes(x = mat/tot)) +
  geom_histogram() +
  facet_wrap(class ~ tot_bin, scales='free_y', ncol = 5) +
  theme_minimal() +
  theme(strip.text = element_blank(), axis.text.y = element_blank()) +
  xlab('Maternal count proportion') +
  ylab('N spots or cells') +
  scale_x_continuous(breaks = c(0, 0.5, 1), limits = c(-0.1, 1.1), labels = c(0, 0.5, 1))
ggsave('figures/03_singlet_doublet_all_histogram_2-6.pdf', height=3, width=4)
```

# Smart-seq3 only

```{r}
ss3 |>
  ggplot(aes(x = mat/tot)) +
  geom_histogram() +
  facet_wrap(tot ~ ., scales='free_y') +
  theme_minimal() +
  theme(strip.text = element_blank()) +
  xlab('Maternal count proportion') +
  ylab('N cells') +
  scale_x_continuous(breaks = c(0, 0.5, 1), limits = c(-0.1, 1.1), labels = c(0, 0.5, 1))
ggsave('figures/03_smartseq3_2-100.pdf', height=6, width=8)
```


# Overdispersions

```{r}
bb_viz <- readRDS('betabin_results_overall_bias_cere_visium.rds')
bb_sing <- readRDS('betabin_results_overall_bias_cere_4_singlets.rds')
bb_doub <- readRDS('betabin_results_overall_bias_cere_4_doublets.rds')
bb_ss3 <- readRDS('betabin_results_smartseq3.rds')
```

```{r}
bb_viz |>
  mutate(class = 'visium') |>
  bind_rows(bb_sing |> mutate(class = 'singlets')) |>
  bind_rows(bb_doub |> mutate(class = 'doublets')) |>
  bind_rows(bb_ss3 |> mutate(class = 'smart-seq3')) |>
  filter(!grepl('mt-', gene)) |>
  filter(!(gene %in% xchr_genes)) |>
  mutate(class = factor(class, levels = c('visium', 'doublets', 'singlets', 'smart-seq3'))) |>
  filter(totalUMI > 1000) |>
  ggplot(aes(x = phi)) +
  geom_histogram(bins=100) +
  facet_grid(class ~ ., scales='free') +
  theme_minimal() +
  theme(strip.text = element_blank()) +
  xlab(TeX(r'(Estimated gene-specific overdispersion ($\hat{\phi}_j$))')) +
  ylab('N genes') +
  scale_y_continuous(position = 'right')
ggsave('figures/03_overdispersion_histograms.pdf', height=2.65, width=4)
```


# Individual gene correlation and proportion

For each sample, compute individual gene correlation and proportion

```{r}
library(fields)
library(FastKNN)

get_cor <- function(rctd_obj, genes = c('Malat1', 'Plp1')) {
  coords <- rctd_obj@spatialRNA@coords |> rownames_to_column(var = 'bead')
  mygenes <- genes
  res <- NULL
  for (g in mygenes) {
    coords$mat <- rctd_obj@spatialRNA@maternalCounts[g,coords$bead]
    coords$pat <- rctd_obj@spatialRNA@paternalCounts[g,coords$bead]
    coords <- coords |> mutate(tot = mat+pat)
    coords_sub <- coords |> filter(tot>0)
    coords_dist <- rdist(coords_sub |> select(x,y) |> as.matrix())
    results_cor <- numeric(10)
    results_proportion_same_bias <- numeric(10)
    for (k in 1:10) {
      nn = matrix(0,nrow(coords_dist),k) # n x k
      avg_nn_p <- numeric(nrow(coords_dist))
      for (i in 1:nrow(coords_dist)) {
        nn[i,] <- k.nearest.neighbors(i, coords_dist, k = k)
        avg_nn_p[i] <- mean(coords_sub$mat[nn[i,]]/coords_sub$tot[nn[i,]],na.rm=T)
      }
      results_cor[k] <- cor(coords_sub$mat/coords_sub$tot, avg_nn_p, use='pairwise.complete')
      mat_bias <- coords_sub$mat/coords_sub$tot > 0.5
      nn_bias <- avg_nn_p > 0.5
      results_proportion_same_bias[k] <- sum(mat_bias==nn_bias)/length(mat_bias)
    }
    dd <- data.frame(gene = g, k = 1:10, cor = results_cor, prop = results_proportion_same_bias)
    if (is.null(res)) {
      res <- dd
    } else {
      res <- bind_rows(res, dd)
    }
  }
  return(res)
}
```

```{r}
res_hippo1 <- get_cor(readRDS('rctd_combined_hippo_1.rds'), genes = c('Malat1', 'Plp1'))
res_hippo2 <- get_cor(readRDS('hippo_slideseq_mouse_2.rds'), genes = c('Malat1', 'Plp1'))
res_hippo3 <- get_cor(readRDS('rctd_combined_hippo_3_nm3.rds'), genes = c('Malat1', 'Plp1'))
res_cere3 <- get_cor(readRDS('rctd_combined_cere_4_nm3.rds'), genes = c('Malat1', 'Plp1'))
res_cere4 <- get_cor(readRDS('rctd_cere_3.rds'), genes = c('Malat1', 'Plp1'))
```

```{r}
res |>
  pivot_longer(cols = c('cor','prop')) |>
  filter(name == 'cor') |>
  ggplot(aes(x = k, y = value)) +
  geom_point(aes(color = gene)) +
  geom_line(aes(color = gene)) +
  geom_hline(yintercept=0, lty='dashed') +
  scale_color_tableau() +
  theme_classic()
```



```{r}
res |>
  pivot_longer(cols = c('cor','prop')) |>
  filter(name == 'prop') |>
  ggplot(aes(x = k, y = value)) +
  geom_point(aes(color = gene)) +
  geom_line(aes(color = gene)) +
  geom_hline(yintercept=0.5, lty='dashed') +
  scale_color_tableau() +
  theme_classic()
```

```{r}

```




